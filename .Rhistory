library(RSQLite)
con<-dbConnect(SQLite(), "./factbook.db")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
library(DBI)
con<-dbConnect(SQLite(), "./factbook.db")
View(con)
View(con)
q1 = "SELECT * FROM facts LIMIT 5"
result1 = dbGetQuery(conn, q1)
q1 = "SELECT * FROM facts LIMIT 5"
result1 = dbGetQuery(con, q1)
con<-dbConnect(SQLite(), "./factbook.db")
getwd()
dbDisconnect(con)
getwd()
con<-dbConnect(SQLite(), "./factbook.db")
getwd()
getwd()
dbListTables(conn)
#Loading packages
library(tidyverse)
library(DBI)
library(RSQLite)
library(ggplot2)
library(dplyr)
library(corrplot)
library(plotly)
library(ggcorrplot)
library(scales)
library(tufte)
library(lubridate)
library(streamgraph)
library(jsonlite)
library(emo)
library(zoo)
getwd()
game<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/game_log.csv")
park<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/park_codes.csv")
people<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/person_codes.csv")
team<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/team_codes.csv")
##Load the tables into a database
conn <- dbConnect(SQLite(), "mlb.db") #initialize a new database
dbWriteTable(conn=conn, name = "game", value = game, row.names=FALSE,
header=TRUE)
dbListTables(conn)
#remove original un-normalized tables
tables <- c("game", "park",
"team", "people")
for (t in tables) {
drop_command = sprintf("DROP TABLE %s", t)
dbExecute(conn, drop_command)
}
dbListTables(conn)
dbDisconnect(conn)
