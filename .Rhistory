library(RSQLite)
con<-dbConnect(SQLite(), "./factbook.db")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
library(DBI)
con<-dbConnect(SQLite(), "./factbook.db")
View(con)
View(con)
q1 = "SELECT * FROM facts LIMIT 5"
result1 = dbGetQuery(conn, q1)
q1 = "SELECT * FROM facts LIMIT 5"
result1 = dbGetQuery(con, q1)
con<-dbConnect(SQLite(), "./factbook.db")
getwd()
dbDisconnect(con)
getwd()
con<-dbConnect(SQLite(), "./factbook.db")
getwd()
getwd()
dbListTables(conn)
#Loading packages
library(tidyverse)
library(DBI)
library(RSQLite)
library(ggplot2)
library(dplyr)
library(corrplot)
library(plotly)
library(ggcorrplot)
library(scales)
library(tufte)
library(lubridate)
library(streamgraph)
library(jsonlite)
library(emo)
library(zoo)
getwd()
game<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/game_log.csv")
park<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/park_codes.csv")
people<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/person_codes.csv")
team<-read_csv("C:/Users/ricky/Documents/GitHub/SQL-fundamentals/Baseball/team_codes.csv")
##Load the tables into a database
conn <- dbConnect(SQLite(), "mlb.db") #initialize a new database
dbWriteTable(conn=conn, name = "game", value = game, row.names=FALSE,
header=TRUE)
dbListTables(conn)
#remove original un-normalized tables
tables <- c("game", "park",
"team", "people")
for (t in tables) {
drop_command = sprintf("DROP TABLE %s", t)
dbExecute(conn, drop_command)
}
dbListTables(conn)
dbDisconnect(conn)
library(tidyverse)
library(DBI)
library(RSQLite)
library(ggplot2)
library(plotly)
library(lubridate)
library(ggcorrplot)
conn<-dbConnect(SQLite(), "mental_health.sqlite")
tables <- dbListTables(conn)
View(df.full)
#Pivot the columns longer and rename them
df.full<-df.full%>%
pivot_wider(names_from = question,
values_from = answer)
library(DataExplorer)
#Explore the data to identify variables of interest
introduce(df.full)
#Explore the data to identify variables of interest
plot_bar(df.full)
#Explore the data to identify variables of interest
plot_histogram(df.full)
#Explore the data to identify variables of interest
plot_histogram(df.full, year)
#Explore the data to identify variables of interest
plot_histogram(df.full, x=year)
plot_intro(df.full)
#Explore the data to identify variables of interest
plot_histogram(df.full, by=year)
#Explore the data to identify variables of interest
plot_histogram(df.full,  geom_histogram_args = list(aes(x=year)))
View(df.full)
#Explore the data to identify variables of interest
glimpse(df.full)
#Explore the data to identify variables of interest
head(df.full,2)
plot_intro(df.full)
df.full<-unlist(df.full)
df.full<-as.tibble(df.full)
View(df.full)
#Pivot the columns longer and rename them
df.full<-df.full%>%
pivot_wider(names_from = question,
values_from = answer)
df.full<-unlist(df.full,use.names = TRUE, recursive = TRUE)
#Pivot the columns longer and rename them
df.full<-df.full%>%
pivot_wider(names_from = question,
values_from = answer)
#Explore the data to identify variables of interest
#glimpse(df.full)
plot_histogram(df.full)
plot_intro(df.full)
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
df.2014<-df.2014%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
remote_wrk=`Do you work remotely (outside of an office) at least 50% of the time?`,
id=UserID)
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2017<-df.2017%>%
pivot_wider(names_from = question,
values_from = answer)
df.2017<-df.2017%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
identify= `Are you openly identified at work as a person with a mental health issue?`,
race=`What is your race?`,
id=UserID)
View(df.2014)
View(df.2016)
View(df.2017)
View(df.2016)
View(df.2014)
View(df.2017)
introduce(df.2014)
plot_bar(df.2014)
plot_bar(df.2014, maxcat = 5)
plot_bar(df.2014, maxcat = 5, by="gender")
table(df.2014$gender)
plot_bar(df.2014, maxcat = 5)
plot_bar(df.2014, maxcat = 5, ggtheme = theme_gray())
plot_bar(df.2014, maxcat = 5, ggtheme = theme_bw())
plot_histogram(df.2014)
plot_correlation(df.2014)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014%>%
filter(gender=="Male"||gender=="Female")
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014%>%
filter(gender!="Male"||gender!="Female")
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014%>%
filter(gender=="Male" || gender=="Female")
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014%>%
filter(gender="Male" || gender="Female")
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male" || gender=="Female")
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(str_detect(gender, pattern = "Male|Female"))
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(str_detect(gender, pattern = "[Male]|[Female]"))
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
df.2014<-df.2014%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
remote_wrk=`Do you work remotely (outside of an office) at least 50% of the time?`,
id=UserID)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(str_detect(gender, pattern = "[Male]|[Female]"))
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
df.2014<-df.2014%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
remote_wrk=`Do you work remotely (outside of an office) at least 50% of the time?`,
id=UserID)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male")
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
df.2014<-df.2014%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
remote_wrk=`Do you work remotely (outside of an office) at least 50% of the time?`,
id=UserID)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male"|gender=="Female")
View(df.2014)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male"|gender=="Female")%>%
factor(gender)
df.2014$gender<-factor(df.2014$gender)
plot_bar(df.2014, maxcat = 5, ggtheme = theme_bw())
plot_bar(df.2014, maxcat = 5, by="gender", ggtheme = theme_bw())
plot_correlation(df.2014)
plot_bar(df.2014, maxcat = 5, by="gender", ggtheme = theme_bw())
#Explore data
plot_intro(df.2014)
#Explore data
plot_intro(df.2014, ggtheme = theme_bw())
plot_bar(df.2014, maxcat = 5, by="gender", ggtheme = theme_bw())
